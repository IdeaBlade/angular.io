block includes
  include ../_util-fns

:marked
  # Trying Angular

  Live coding [Quickstart](../quickstart.html) in the browser is a great way to explore Angular.
  Links on almost every documentation page will open completed samples in the browser where you can
  play with the code, share your changes with friends, and download and run the code on your own machine.

  As much fun as this is
  * you can't ship your app in plunker
  * you aren't always online when writing code
  * transpiling TypeScript in the browser is slow
  * the type support, refactoring, and code completion only work in your local IDE
 
  # Setup a local development environment

  Fortunately, setting up a new project in your local development environment is quick and easy
  with the [**QuickStart seed**](https://github.com/angular/quickstart "Install the github QuickStart repo"),
  a repository on github. 

  Make sure you have [node and npm installed](#install-node "What if you don't have node?").
  Then ...
  1. [clone](#clone) or [download](#download) the **QuickStart seed repository**.
  1. [install the `npm` packages](#install-node "What if you don't have node?")
  1. run `npm start` to launch the sample application

a#clone
:marked
  ### Clone

  Perform the _clone-to-launch_ steps with these terminal commands.

code-example(language="sh" class="code-shell").
  git clone https://github.com/angular/quickstart.git my-project
  cd my-project
  npm install
  npm start

a#download
:marked
  ### Download
  <a href="https://github.com/angular/quickstart/archive/master.zip" title="Download the QuickStart seed repository">Download the QuickStart seed</a>
  and unzip it into your project folder. Then perform the remaining steps with these terminal commands.

code-example(language="sh" class="code-shell").
  cd my-project
  npm install
  npm start

.l-main-section
:marked
  ## What's different about the QuickStart Seed?

  The QuickStart seed contains the same application as the <live-example><i>live code</i> QuickStart</live-example>.
  But there are _many more files_ in the project folder on your machine, 
  most of which you can [learn about later](setup-systemjs-anatomy.html "Setup Anatomy").
  
  Focus on the following three TypeScript (`.ts`) files in the **`/app`** folder.

.filetree
  .file app
  .children
    .file app.component.ts
    .file app.module.ts
    .file main.ts

+makeTabs(`
    setup/ts/app/app.component.ts,
    setup/ts/app/app.module.ts,
    setup/ts/app/main.ts
  `, '', `
    app/app.component.ts,
    app/app.module.ts,
    app/main.ts
  `)(format='.')
:marked
  The [QuickStart](../quickstart.html "Angular QuickStart") sample only shows the `AppComponent` file.
  it creates the equivalent of `app.module.ts` and `main.ts` internally _for that example only_
  so the reader can discover Angular without distraction.

  All other guides and cookbooks expect you to have defined these three files explicitly. 
  Each file has a distinct purpose and evolves independently as the application grows.

style td, th {vertical-align: top}
table(width="100%")
  col(width="20%")
  col(width="80%")
  tr
    th File
    th Purpose
  tr
    td <code>app.component.ts</code>
    td
      :marked
        Defines the same `AppComponent` as the same as one in the [QuickStart](../quickstart.html).
        It is the **root** component of what will become a tree of nested components
        as the application evolves. 
  tr
    td <code>app.module.ts</code>
    td
      :marked
        Defines the `AppModule`, the [root module](appmodule.html) that tells Angular how to assemble the application.
        Right now it declares only the `AppComponent`. 
        Soon there will be more components to talk about. 
  tr
    td <code>main.ts</code>
    td
      :marked
        Compiles the application with the JiT compiler
        and [bootstraps](appmodule.html#main) the application to run in the browser.
        That's a reasonable choice for the development of most projects and
        it's the only viable choice for a sample running in the _live-coding_ environment.
        You'll learn about alternative compiling and deployment options later in the documentation.

.l-main-section
:marked
  ## Next Step

  If you're new to Angular, try the recommended [learning path](learning-path.html).

a#install-node
.l-main-section
:marked
  ## Appendix: _node_ and _npm_

    Node.js and npm are essential to modern web development with Angular and other platforms.
    Node powers client development and build tools.
    The _npm_ package manager, itself a _node_ application, installs JavaScript libraries.
    
    <a href="https://docs.npmjs.com/getting-started/installing-node" target="_blank" title="Installing Node.js and updating npm">
    Get them now</a> if they're not already installed on your machine.
 
    **Verify that you are running node `v4.x.x` or higher and npm `3.x.x` or higher**
    by running the commands `node -v` and `npm -v` in a terminal/console window.
    Older versions produce errors.

    We recommend [nvm](https://github.com/creationix/nvm) for managing multiple versions of node and npm. 
    You may need [nvm](https://github.com/creationix/nvm) if you already have projects running on your machine that 
    use other versions of node and npm.

