include _util-fns

:marked
  The easiest way to get started with Angular is to **<live-example>try the <i>Hello Angular</i> live example</live-example>**.
  You don't need to install anything. 
  Just open it and follow along with the documentation.
  If you'd rather develop in a local environment, learn how on the [Setup](guide/setup.html) page.

  Angular applications are made of _components_. 
  A _component_ is the combination of an HTML template and a component class that controls a portion of the screen.
  Here's a super-simple Angular component, written in [TypeScript](#typescript):

+makeExample('app/app.component.ts','','app/app.component.ts')(format='.')
:marked
  The `@Component` [_decorator_](glossary.html#decorator '"Decorator" explained') function takes a _metadata_ object that 
  describes how the HTML template and component class work together.
  
  The `selector` property tells Angular to display the component inside a custom `<my-app>` tag in the `index.html`.
+makeExample('index.html','my-app','index.html (inside <body>)')(format='.')
:marked
  The `template` property defines a message inside an `<h1>` header.
  The message starts with "Hello" and ends with `{{name}}` 
  which is an Angular [interpolation binding](guide/displaying-data.html) expression.
  At runtime, Angular replaces `{{name}}` with the value of the component's `name` property. 
  
  Change the component class's `name` property from `'Angular'` to `'World'` and see what happens.
  
  Binding is one of many Angular features you'll discover in this documentation.
  
.l-sub-section
  :marked
    ### Next step
    Start [learning Angular](guide/learning-angular.html).

.l-main-section
a#typescript
:marked
  ## TypeScript
  This example is written in <a href="http://www.typescriptlang.org/" target="_blank" title="TypeScript">TypeScript</a>,
  a typed super-set of the latest JavaScript. 
  TypeScript compiles into JavaScript that runs on any modern browser.
  Most developers find it delightful which is why most Angular developers write applications in TypeScript.
  You can write your application in 
  [other versions of JavaScript](cookbook/ts-to-js.html "TypeScript to JavaScript") or 
  [Dart](../../dart/latest) if you prefer.
// will be  
  <a href="https://github.com/angular/dart/latest" target="_blank" title="Dart">Dart</a> if you prefer.

